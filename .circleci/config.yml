# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo

    docker:
      # specify the version you desire here
      - image: circleci/node:10

      - image: circleci/redis:alpine

      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: auth_example
      
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
        environment:
          cluster.name: elasticsearch
          xpack.security.enabled: false
          transport.host: localhost
          network.host: 127.0.0.1
          http.port: 9200
          discovery.type: single-node
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          _JAVA_OPTIONS: "-Xms512m -Xmx512m"

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 2m

      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 2m

      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      # run tests!
      - run: 
          name: Check ENV vars set
          command: printenv

      - run: 
          name: Setup Elasticsearch mapping templates
          command: ./setup_es.sh

      - run: 
          name: Lint and test the app
          command: npm run lint && npm run test

workflows:
  version: 2
  build-and-test:
    jobs:
      - build:
          context: auth-example-app
