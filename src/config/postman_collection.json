{
	"info": {
		"_postman_id": "2dd4d02e-14f3-457a-98c4-b9fe35624934",
		"name": "Example API Tests",
		"description": "This collection is designed to test the example API with Postgres and Redis and JWT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register (missing credentials)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@test\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "localhost:3000/register",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"register"
					]
				},
				"description": "Should invalidate due to missing credentials"
			},
			"response": []
		},
		{
			"name": "Register (invalid data type)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\": \"Test\",\n\t\"lastName\": \"User\",\n\t\"age\": \"20\",\n\t\"email\": \"test@example.com\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "localhost:3000/register",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"register"
					]
				},
				"description": "Should invalidate if age is not a number"
			},
			"response": []
		},
		{
			"name": "Register (valid)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\": \"Test\",\n\t\"lastName\": \"User\",\n\t\"age\": 20,\n\t\"email\": \"test@example.com\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "localhost:3000/register",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"register"
					]
				},
				"description": "Should return JSON payload of new record with ID"
			},
			"response": []
		},
		{
			"name": "Login (missing credentials)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/login",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				},
				"description": "Should show validation error missing credentials"
			},
			"response": []
		},
		{
			"name": "Login (invalid email)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@test\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "localhost:3000/login",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				},
				"description": "Should fail without valid email"
			},
			"response": []
		},
		{
			"name": "Login (valid)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@example.com\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "localhost:3000/login",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				},
				"description": "Should return an auth token"
			},
			"response": []
		},
		{
			"name": "Search (with city)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/search?q=Missoula",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "Missoula"
						}
					]
				},
				"description": "Requests geo data for provided city name"
			},
			"response": []
		},
		{
			"name": "Users (without auth token)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				},
				"description": "Should fail with missing token exception"
			},
			"response": []
		},
		{
			"name": "Users (with guest role token)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZGlzcGxheU5hbWUiOiJUZXN0IFVzZXIiLCJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJpYXQiOjE1NDgzNjc0MzAsImV4cCI6MTU0ODM3MTAzMH0.0b2gyjLyhme8sWUyalZx5r_iBeDKGZil3KRYHrMRTwg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				},
				"description": "Should return list of users (for now)"
			},
			"response": []
		},
		{
			"name": "Roles (with guest token)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZGlzcGxheU5hbWUiOiJUZXN0IFVzZXIiLCJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJpYXQiOjE1NDgzNjc0MzAsImV4cCI6MTU0ODM3MTAzMH0.0b2gyjLyhme8sWUyalZx5r_iBeDKGZil3KRYHrMRTwg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/roles",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"roles"
					]
				},
				"description": "Should return list of roles (for now)"
			},
			"response": []
		},
		{
			"name": "Permissions (with guest token)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZGlzcGxheU5hbWUiOiJUZXN0IFVzZXIiLCJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJpYXQiOjE1NDgzNjc0MzAsImV4cCI6MTU0ODM3MTAzMH0.0b2gyjLyhme8sWUyalZx5r_iBeDKGZil3KRYHrMRTwg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3000/permissions",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"permissions"
					]
				},
				"description": "Should return list of permissions (for now)"
			},
			"response": []
		}
	]
}